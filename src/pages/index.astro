---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import { getCollection } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";
import { Image } from "astro:assets";
import me from "../me.jpg";

const posts = (await getCollection("articles"))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 6);
---

<!doctype html>
<html lang="en" class="h-full">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body class="h-full flex flex-col">
    <Header />
    <main
      class="grow flex flex-col gap-10 max-w-prose mx-auto py-4 px-4 box-content"
    >
      <section>
        <div class="relative w-[240px] mx-auto mb-6">
          <Image
            class="rounded-full"
            src={me}
            alt="Black and white portrait of Andrew Leedham"
          />
          <span
            class="absolute bottom-0 end-0 text-7xl animate-wave scale-100 transition-transform ease-[cubic-bezier(0.5,_0.33,_0.5,_2)] hover:scale-150 hover:[animation-play-state:paused] cursor-grab select-none"
            onclick="this.parentNode.replaceChild(this.cloneNode(true), this);"
            >ðŸ‘‹</span
          >
        </div>
        <p>
          Hey I'm Andrew. A Full Stack Web Developer based in the U.K. I
          currently work at Onyx Insight on all things web. I spend my free time
          renovating my house and bouldering and manage to squeeze in a bit of
          skiing and snowboarding now and again.
        </p>
      </section>
      <section>
        <h2 class="text-3xl font-medium mb-2">Latest Articles</h2>
        <ul class="flex flex-col gap-3 mb-5">
          {
            posts.map((post) => (
              <li class="flex flex-col gap-1">
                <h3
                  class="text-lg font-medium"
                  style={`view-transition-name: article-title-${post.slug};`}
                >
                  <a
                    class="underline underline-offset-2"
                    href={`/articles/${post.slug}/`}
                  >
                    {post.data.title}
                  </a>
                </h3>
                <p style={`view-transition-name: article-desc-${post.slug};`}>
                  {post.data.description}
                </p>
                <FormattedDate
                  date={post.data.pubDate}
                  style={`view-transition-name: article-date-${post.slug};`}
                />
              </li>
            ))
          }
        </ul>
        <a class="text-lg underline underline-offset-2" href="/articles"
          >See more</a
        >
      </section>
    </main>
    <Footer />
  </body>
</html>
