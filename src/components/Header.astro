---
import { MoonIcon, RssIcon, SunIcon, SunMoonIcon } from "lucide-react";
import HeaderLink from "./HeaderLink.astro";
import Logo from "./Logo.astro";
import {
  SiBluesky,
  SiGithub,
  SiLinkedin,
  SiStackoverflow,
  SiX,
} from "@icons-pack/react-simple-icons";
---

<header class="shrink-0 border-y border-y-border overflow-auto">
  <nav
    class="flex flex-row justify-start w-full max-w-prose mx-auto *:bg-background *:border-x *:border-x-border *:-mx-px *:focus:z-10"
  >
    <Logo class="-outline-offset-2" />
    <HeaderLink
      class="grid place-items-center h-12 px-4 hover:bg-subtle cursor-pointer shrink-0 -outline-offset-2"
      href="/blog">Articles</HeaderLink
    >
    <script is:inline>
      const modes = ["system", "light", "dark"];

      function changeMode(mode) {
        const colorSchemeTag = document.querySelector(
          'meta[name="color-scheme"]'
        );

        document.documentElement.classList.remove("dark-mode");
        document.documentElement.classList.remove("light-mode");
        if (mode === "dark") {
          document.documentElement.classList.add("dark-mode");
        } else if (mode === "light") {
          document.documentElement.classList.add("light-mode");
        }
        localStorage.mode = mode;
        colorSchemeTag.setAttribute(
          "content",
          mode === "system" ? "light dark" : mode
        );
      }

      changeMode(localStorage.mode ?? "system");

      window.cycleMode = (button) => {
        const currentMode = localStorage.mode ?? "system";
        const index = modes.indexOf(currentMode);
        const nextMode = modes[(index + 2) % modes.length];
        button.ariaLabel = `Switch to ${nextMode} colour mode`;
        changeMode(modes[(index + 1) % modes.length]);
      };
    </script>
    <a
      class="grid place-items-center w-12 h-12 hover:bg-subtle cursor-pointer shrink-0 -outline-offset-2"
      aria-label="Andrew Leedham's Bluesky"
      href="https://bsky.app/profile/andrewleedham.me"
    >
      <SiBluesky size={20} color="currentColor" />
    </a>
    <a
      class="grid place-items-center w-12 h-12 hover:bg-subtle cursor-pointer shrink-0 -outline-offset-2"
      aria-label="Andrew Leedham's LinkedIn"
      href="https://www.linkedin.com/in/andrew-leedham-ba864b112/"
    >
      <SiLinkedin size={20} color="currentColor" />
    </a>
    <a
      class="grid place-items-center w-12 h-12 hover:bg-subtle cursor-pointer shrink-0 -outline-offset-2"
      aria-label="Andrew Leedham's GitHub"
      href="https://github.com/AndrewLeedham"
    >
      <SiGithub size={20} color="currentColor" />
    </a>
    <a
      class="grid place-items-center w-12 h-12 hover:bg-subtle cursor-pointer shrink-0 -outline-offset-2"
      aria-label="stack-Andrew Leedham's Stack Overflow"
      href="http://stackoverflow.com/users/2386508/andrew-leedham"
    >
      <SiStackoverflow size={20} color="currentColor" />
    </a>
    <a
      class="grid place-items-center w-12 h-12 hover:bg-subtle cursor-pointer shrink-0 -outline-offset-2"
      aria-label="RSS Feed"
      href="/rss.xml"
    >
      <RssIcon size={20} color="currentColor" />
    </a>
    <button
      class="grid place-items-center w-12 h-12 hover:bg-subtle cursor-pointer shrink-0 -outline-offset-2"
      aria-label="Cycle colour mode"
      onclick="window.cycleMode(this)"
    >
      <SunMoonIcon
        className="dark:hidden light:hidden"
        size={20}
        color="currentColor"
      />
      <SunIcon size={20} color="currentColor" className="hidden light:block" />
      <MoonIcon size={20} color="currentColor" className="hidden dark:block" />
    </button>
    <script is:inline>
      const mode = localStorage.mode ?? "system";
      const nextMode = modes[(modes.indexOf(mode) + 1) % modes.length];
      const button = document.documentElement.querySelector(
        '[aria-label="Cycle colour mode"]'
      );
      if (button) {
        button.ariaLabel = `Switch to ${nextMode} colour mode`;
      }
    </script>
  </nav>
</header>
